From 0805440921ec5aaf7e64b96b94358bcac177c190 Mon Sep 17 00:00:00 2001
From: MathiasDPX <mathias@dupeux.net>
Date: Thu, 3 Apr 2025 19:04:30 +0200
Subject: [PATCH 1/2] add modloader

---
 GDSripts/Main.gd       |  1 +
 GDSripts/ModManager.gd | 82 ++++++++++++++++++++++++++++++++++++++++++
 project.godot          |  1 +
 3 files changed, 84 insertions(+)
 create mode 100644 GDSripts/ModManager.gd

diff --git a/GDSripts/Main.gd b/GDSripts/Main.gd
index 33c63d4..1f93872 100644
--- a/GDSripts/Main.gd
+++ b/GDSripts/Main.gd
@@ -318,6 +318,7 @@ func _ready():
     _refresh_sorted_apps()
 
     app_name_popup.hide()
+	ModManager.load_mods()
 
 
 func _play_boot_sound() -> void :
diff --git a/GDSripts/ModManager.gd b/GDSripts/ModManager.gd
new file mode 100644
index 0000000..9c8ef64
--- /dev/null
+++ b/GDSripts/ModManager.gd
@@ -0,0 +1,82 @@
+extends Node
+
+var _mods = {}
+
+func get_mod_manifest(modid:String) -> Dictionary:
+	return _mods[modid]
+	
+func get_mods():
+	return _mods
+
+func has_mod(modid:String) -> bool:
+	return _mods.keys().has(modid)
+
+func load_mods():
+	var dir_path = "user://mods"
+	var dir = DirAccess.open(dir_path)
+	
+	# Ensure the directory exists
+	if dir == null:
+		DirAccess.make_dir_absolute(dir_path)
+		print("Mods directory created")
+		return  # If we just created it, there's nothing to load
+
+	dir.list_dir_begin()
+	var file_name = dir.get_next()
+
+	# Load mods
+	while file_name != "":
+		if not dir.current_is_dir():
+			var mod_path = dir_path + "/" + file_name
+			load_mod(mod_path)
+		file_name = dir.get_next()
+	
+	dir.list_dir_end()
+		
+func load_mod(path):
+	var success = ProjectSettings.load_resource_pack(path, true)
+		
+	if success:
+		if ResourceLoader.exists("res://mod_manifest.json"):
+			var mod_manifest_file := FileAccess.open("res://mod_manifest.json", FileAccess.READ)
+			if mod_manifest_file == null:
+				print(mod_manifest_file)
+				print("No manifest file found from "+path)
+				return
+			
+			var mod_manifest = JSON.parse_string(mod_manifest_file.get_as_text())
+			if mod_manifest == null:
+				print("Unable to parse mod_manifest.json from "+path)
+				return
+			
+			var root_folder
+			var mod_id = mod_manifest["id"]
+			var mod_name = mod_manifest["name"]
+			
+			if (not mod_manifest.keys().has("root")):
+				root_folder = "res://mods/"+mod_id+"/"
+			else:
+				root_folder = mod_manifest["root"]
+			if not root_folder.ends_with("/"):
+				root_folder = root_folder+"/"
+			
+			var main_path = root_folder+mod_manifest["main"]
+			
+			# Load the mod
+			if ResourceLoader.exists(main_path):
+				var mod_main = load(main_path).new()
+				
+				if mod_main.has_method("initialize"):
+					mod_main.initialize()
+				
+				mod_manifest["modpath"] = path
+				mod_manifest["root"] = root_folder
+				_mods[mod_id] = mod_manifest
+				print("Mod '"+mod_name+"' loaded!")
+			else:
+				print("No Main file found for "+mod_name)
+				return
+		else:
+			print("Main script not found in the loaded pack")
+	else:
+		print("Failed to load mod from "+path)
diff --git a/project.godot b/project.godot
index 855b399..3376611 100644
--- a/project.godot
+++ b/project.godot
@@ -34,6 +34,7 @@ Progress="*res://GDSripts/ProgressTracker.gd"
 Account="*res://GDSripts/AccountManager.gd"
 Console="*res://addons/console/console.gd"
 Settings="*res://GDSripts/GameSettings.gd"
+ModManager="*res://GDSripts/ModManager.gd"
 
 [display]
 
-- 
2.45.1.windows.1

